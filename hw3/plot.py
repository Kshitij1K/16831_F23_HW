#! /bin/python3

import numpy as np

if __name__=='__main__':
    dqn_data_test1 = [
        -242.2505645751953,
        -215.28225708007812,
        -204.29278564453125,
        -185.5286865234375,
        -180.59898376464844,
        -163.03956604003906,
        -155.9077911376953,
        -123.64505767822266,
        -74.24109649658203,
        -51.45420455932617,
        -23.383413314819336,
        3.1026315689086914,
        48.28386306762695,
        50.01664352416992,
        48.72113037109375,
        59.200416564941406,
        69.80445098876953,
        73.04554748535156,
        78.14311218261719,
        83.93280029296875,
        81.41184997558594,
        94.16767883300781,
        111.08639526367188,
        127.19783020019531,
        139.09295654296875,
        131.4438934326172,
        122.009033203125,
        116.49176025390625,
        103.55160522460938,
        101.0307846069336
    ]

    dqn_data_test2 = [
        -218.0360870361328,
        -217.69744873046875,
        -209.83128356933594,
        -196.50320434570312,
        -173.17764282226562,
        -162.58721923828125,
        -129.6290740966797,
        -115.92247009277344,
        -66.16898345947266,
        -47.52927017211914,
        -29.17384147644043,
        5.367081642150879,
        14.333909034729004,
        7.542459011077881,
        6.439537525177002,
        -3.6145262718200684,
        -0.8739791512489319,
        4.1973958015441895,
        3.328652858734131,
        19.578535079956055,
        44.96873092651367,
        66.72307586669922,
        80.84602355957031,
        91.39867401123047,
        98.02009582519531,
        114.35203552246094,
        133.27980041503906,
        149.4153594970703,
        150.42340087890625,
        154.05404663085938
    ]

    dqn_data_test3 = [
        -233.30032348632812,
        -224.87962341308594,
        -212.11123657226562,
        -199.99766540527344,
        -185.2968292236328,
        -162.63890075683594,
        -147.76797485351562,
        -141.60708618164062,
        -118.44734954833984,
        -89.76139068603516,
        -78.1181640625,
        -56.31779098510742,
        -39.93241500854492,
        -31.516353607177734,
        -1.7819255590438843,
        13.12270736694336,
        35.9783935546875,
        38.81342315673828,
        41.912315368652344,
        39.35956573486328,
        36.39997863769531,
        45.82251739501953,
        54.85386276245117,
        78.82154083251953,
        110.0347900390625,
        115.20596313476562,        
        106.05079650878906,
        107.93073272705078,
        105.16217041015625,
        117.01923370361328
    ]

    ddqn_data_test1 = [
        -236.7694854736328,
        -217.65713500976562,
        -207.61585998535156,
        -196.61280822753906,
        -174.21546936035156,
        -138.2761688232422,
        -114.96456146240234,
        -106.90718078613281,
        -93.53947448730469,
        -86.27760314941406,
        -72.40873718261719,
        -64.96134948730469,
        -53.19667434692383,
        -26.72666358947754,
        -3.3906052112579346,
        12.33778190612793,
        39.19880676269531,
        66.45350646972656,
        66.629638671875,
        71.54832458496094,
        75.56893920898438,
        82.44824981689453,
        80.05599212646484,
        74.64933776855469,
        68.92316436767578,
        60.717777252197266,
        53.39780807495117,
        45.6905517578125,
        49.305843353271484,
        54.4494743347168
    ]

    ddqn_data_test2 = [
        -226.16696166992188,
        -200.90274047851562,
        -193.26173400878906,
        -186.41159057617188,
        -177.3418731689453,
        -166.60653686523438,
        -153.6722869873047,
        -139.3905792236328,
        -142.32130432128906,
        -135.7656707763672,
        -124.37364959716797,
        -95.4095687866211,
        -76.77645111083984,
        -26.1000919342041,
        -1.4125975370407104,
        30.91399574279785,
        48.550636291503906,
        49.0596809387207,
        45.11393737792969,
        37.36521530151367,
        35.93218231201172,
        39.999977111816406,
        46.608551025390625,
        45.02143096923828,
        71.31723022460938,
        104.67032623291016,
        119.12415313720703,
        148.12403869628906,
        156.24044799804688,
        156.88961791992188
    ]

    ddqn_data_test3 = [
        -257.8250732421875,
        -218.17953491210938,
        -208.73619079589844,
        -202.7607421875,
        -183.5149688720703,
        -161.28199768066406,
        -129.71127319335938,
        -107.24430084228516,
        -86.43986511230469,
        -62.911441802978516,
        -55.440147399902344,
        -35.44386672973633,
        -16.41814422607422,
        1.3622950315475464,
        9.943380355834961,
        25.58375358581543,
        49.29482650756836,
        71.78186798095703,
        80.96844482421875,
        96.83222961425781,
        95.59435272216797,
        81.36402130126953,
        79.82880401611328,
        72.91545104980469,
        85.71460723876953,
        101.4033203125,
        108.512939453125,
        109.66521453857422,
        120.14636993408203,
        123.79499053955078
    ]

    dqn_data_test1 = np.array(dqn_data_test1)
    dqn_data_test2 = np.array(dqn_data_test2)
    dqn_data_test3 = np.array(dqn_data_test3)

    dqn_data = np.vstack([dqn_data_test1, dqn_data_test2, dqn_data_test3])

    ddqn_data_test1 = np.array(ddqn_data_test1)
    ddqn_data_test2 = np.array(ddqn_data_test2)
    ddqn_data_test3 = np.array(ddqn_data_test3)

    ddqn_data = np.vstack([ddqn_data_test1, ddqn_data_test2, ddqn_data_test3])

    dqn_avg_returns = np.average(dqn_data, axis = 0)
    dqn_std_returns = np.std(dqn_data, axis = 0)

    ddqn_avg_returns = np.average(ddqn_data, axis = 0)
    ddqn_std_returns = np.std(ddqn_data, axis = 0)

    time = np.arange(len(dqn_avg_returns)) * 10000

    # Plot the average returns with std_returns as error bar
    import matplotlib.pyplot as plt
    # plt.plot(time, dqn_avg_returns)
    plt.errorbar(time, dqn_avg_returns, yerr = dqn_std_returns)

    # plt.plot(time, ddqn_avg_returns)
    plt.errorbar(time, ddqn_avg_returns, yerr = dqn_std_returns)
    plt.legend(['DQN', 'DDQN'])
    
    # The x label should be in scientific notation
    plt.ticklabel_format(style='sci', axis='x', scilimits=(0,0))
    plt.xlabel('Time Steps')
    plt.ylabel('Average Returns')
    plt.title('Comparison of Average Returns between DQN and DDQN')
    plt.savefig('plot.png')
